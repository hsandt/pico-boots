require("engine/test/bustedhelper")
require("engine/core/string")

describe('to_big', function ()
  it('"abc" => "abc"', function ()
    assert.are_equal("abc", to_big("abc"))
  end)
  it('"\65bc" => "abc"', function ()
    assert.are_equal("abc", to_big("\65bc"))
  end)
  it('"XYZ" => "xyz"', function ()
    assert.are_equal("xyz", to_big("XYZ"))
  end)
end)

describe('compute_char_size', function ()
  it('compute_char_size("hello") => (5, 1)', function ()
    assert.are_same({5, 1}, {compute_char_size("hello")})
  end)
  it('compute_char_size("hello\nworld!") => (6, 2)', function ()
    assert.are_same({6, 2}, {compute_char_size("hello\nworld!")})
  end)
  it('compute_char_size("very\n\nend\n\n") => (4, 5)', function ()
    assert.are_same({4, 5}, {compute_char_size("very\n5\nend\n\n")})
  end)
  it('compute_char_size("\nlong\nlongest  \nok") => (9, 4)', function ()
    assert.are_same({9, 4}, {compute_char_size("\nlong\nlongest  \nok")})
  end)
end)

describe('compute_size', function ()
  it('compute_size("hello") => (21, 7)', function ()
    assert.are_same({21, 7}, {compute_size("hello")})
  end)
  it('compute_size("hello\nworld!") => (25, 13)', function ()
    assert.are_same({25, 13}, {compute_size("hello\nworld!")})
  end)
  it('compute_size("very\n\nend\n\n") => (17, 31)', function ()
    assert.are_same({17, 31}, {compute_size("very\n5\nend\n\n")})
  end)
  it('compute_size("\nlong\nlongest  \nok") => (37, 25)', function ()
    assert.are_same({37, 25}, {compute_size("\nlong\nlongest  \nok")})
  end)
end)
