require("engine/test/bustedhelper")
require("engine/core/string_split")

describe('strspl', function ()
  -- unlike PICO-8 v0.2.1b's split, strspl doesn't support empty separator to explode into individual chars
  it('strspl("hello world", "") => {"hello world"} (empty separator not supported)', function ()
    assert.are_same({"hello world"}, strspl("hello world", ""))
  end)
  it('strspl("", " ", false) => {""}', function ()
    assert.are_same({""}, strspl("", " ", false))
  end)
  it('strspl("", " ", true) => {}', function ()
    assert.are_same({}, strspl("", " ", true))
  end)
  it('strspl("hello", " ") => {"hello"}', function ()
    assert.are_same({"hello"}, strspl("hello", " "))
  end)
  it('strspl("hello world", " ") => {"hello", "world"}', function ()
    assert.are_same({"hello", "world"}, strspl("hello world", " "))
  end)
  it('strspl("hello world", "l") => {"he", "", "o wor", "d"} (multiple separators leave empty strings)', function ()
    assert.are_same({"he", "", "o wor", "d"}, strspl("hello world", "l"))
  end)
  it('strspl("hello\nworld", "\n") => {"hello", "world"}', function ()
    assert.are_same({"hello", "world"}, strspl("hello\nworld", "\n"))
  end)
  it('strspl("||a||b||", "|", false) => {"", "", "a", "", "b", "", ""}', function ()
    assert.are_same({"", "", "a", "", "b", "", ""}, strspl("||a||b||", "|", false))
  end)
  it('strspl("||a||b||", "|", true) => {"a", "b"}', function ()
    assert.are_same({"a", "b"}, strspl("||a||b||", "|", true))
  end)
  it('strspl("||a||b||c", "|", true) => {"a", "b", "c"}', function ()
    assert.are_same({"a", "b", "c"}, strspl("||a||b||c", "|", true))
  end)
  -- multi-separators as table
  it('strspl(",;a,,b;,c", {",", ";"}, false) => {"", "", "a", "", "b", "", "c"}', function ()
    assert.are_same({"", "", "a", "", "b", "", "c"}, strspl(",;a,,b;,c", {',', ';'}, false))
  end)
  it('strspl(",;a,,b;,c", {",", ";"}, true) => {"a", "b", "c"}', function ()
    assert.are_same({"a", "b", "c"}, strspl(",;a,,b;,c", {',', ';'}, true))
  end)
  it('strspl("hello world", "lo") => {"hello world"} (multicharacter not supported)', function ()
    assert.are_same({"hello world"}, strspl("hello world", "lo"))
  end)
end)
