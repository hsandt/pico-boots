require("engine/test/bustedhelper")
require("engine/core/string_format_number")

describe('format_number', function ()
  it('format_number(0, 0) => "0"', function ()
    assert.are_equal("0", format_number(0, 0))
  end)
  it('format_number(5, 0) => "5"', function ()
    assert.are_equal("5", format_number(5, 0))
  end)
  it('format_number(-5, 0) => "-5"', function ()
    assert.are_equal("-5", format_number(-5, 0))
  end)
  it('format_number(5.5, 0) => "6"', function ()
    assert.are_equal("6", format_number(5.5, 0))
  end)
  it('format_number(-5.5, 0) => "-6"', function ()
    assert.are_equal("-6", format_number(-5.5, 0))
  end)
  it('format_number(0, 2) => "0.00"', function ()
    assert.are_equal("0.00", format_number(0, 2))
  end)
  it('format_number(0.05, 2) => "0.05"', function ()
    assert.are_equal("0.05", format_number(0.05, 2))
  end)
  it('format_number(0.994, 2) => "0.99"', function ()
    assert.are_equal("0.99", format_number(0.994, 2))
  end)
  it('format_number(0.995, 2) => "1.00"', function ()
    assert.are_equal("1.00", format_number(0.995, 2))
  end)
  it('format_number(5.1, 2) => "5.10"', function ()
    -- 5.1 is internally represented as 0x0005.1999 which would be floored
    --  to 5.09, so this test effectively checks that rounding works
    assert.are_equal("5.10", format_number(5.1, 2))
  end)
  it('format_number(-5.1, 2) => "-5.10"', function ()
    assert.are_equal("-5.10", format_number(-5.1, 2))
  end)
  it('format_number(-25.015, 2) => "-25.02"', function ()
    assert.are_equal("-25.02", format_number(-25.015, 2))
  end)
end)
